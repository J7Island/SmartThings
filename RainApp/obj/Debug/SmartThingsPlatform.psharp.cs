//  <auto-generated />
using Microsoft.PSharp;
using System.Diagnostics;

namespace RainApp
{
    internal class SmartThingsPlatform : Machine
    {
        internal class Config : Event
        {
            public MachineId appID;

            public Config(MachineId appID)
                : base()
            {
                this.appID = appID;
            }
        }

        internal class IsStorm : Event
        {
            public IsStorm()
                : base()
            {
            }
        }

        internal class IsnotStorm : Event
        {
            public IsnotStorm()
                : base()
            {
            }
        }

        MachineId smartApp;

        [Microsoft.PSharp.Start]
        [OnEntry(nameof(psharp_Init_on_entry_action))]
        class Init : MachineState
        {
        }

        [OnEventDoAction(typeof(SmartApp.RequestWeather), nameof(replyWeather))]
        class Active : MachineState
        {
        }

        void replyWeather()
        {
            System.Random r = new System.Random();
            int rnd = r.Next(0, 2);
            bool flag = (rnd == 0);

            if (flag) {
                this.Send(this.smartApp,new IsStorm());
            } else {
                this.Send(this.smartApp,new IsnotStorm());
            }

        }

        protected void psharp_Init_on_entry_action()
        {
            smartApp = (this.ReceivedEvent as Config).appID;
            this.Goto<Active>();

        }
    }
}
