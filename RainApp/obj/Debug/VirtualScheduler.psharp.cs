//  <auto-generated />
using Microsoft.PSharp;

namespace RainApp
{
    internal class VirtualScheduler : Machine
    {
        internal class Config : Event
        {
            public MachineId appID;

            public Config(MachineId appID)
                : base()
            {
                this.appID = appID;
            }
        }

        internal class End : Event
        {
            public End()
                : base()
            {
            }
        }

        MachineId smartApp;

        [Microsoft.PSharp.Start]
        [OnEntry(nameof(psharp_Init_on_entry_action))]
        class Init : MachineState
        {
        }

        [OnEventDoAction(typeof(SmartApp.TimerStart), nameof(countTimer))]
        class Active : MachineState
        {
        }

        void countTimer()
        {
            System.Random rnd = new System.Random();
            int waitTime = rnd.Next(1*1000, 2*1000);
            System.Threading.Thread.Sleep(waitTime);
            this.Send(this.smartApp,new VirtualScheduler.End());
        }

        protected void psharp_Init_on_entry_action()
        {
            this.smartApp = (this.ReceivedEvent as Config).appID;
            this.Goto<Active>();
        }
    }
}
